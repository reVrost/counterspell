// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file proto/counterspell/v1/counterspell.proto (package counterspell.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_any, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/counterspell/v1/counterspell.proto.
 */
export const file_proto_counterspell_v1_counterspell: GenFile = /*@__PURE__*/
  fileDesc("Cihwcm90by9jb3VudGVyc3BlbGwvdjEvY291bnRlcnNwZWxsLnByb3RvEg9jb3VudGVyc3BlbGwudjEiKAoFTW9kZWwSEAoIcHJvdmlkZXIYASABKAkSDQoFbW9kZWwYAiABKAkiXQoJVG9vbFBhcmFtEgwKBG5hbWUYASABKAkSDAoEdHlwZRgCIAEoCRIQCghyZXF1aXJlZBgDIAEoCBITCgtkZXNjcmlwdGlvbhgEIAEoCRINCgVpdGVtcxgFIAMoCSKnAQoEVG9vbBIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEjEKBnBhcmFtcxgDIAMoCzIhLmNvdW50ZXJzcGVsbC52MS5Ub29sLlBhcmFtc0VudHJ5GkkKC1BhcmFtc0VudHJ5EgsKA2tleRgBIAEoCRIpCgV2YWx1ZRgCIAEoCzIaLmNvdW50ZXJzcGVsbC52MS5Ub29sUGFyYW06AjgBIk8KB1Rvb2xzZXQSDAoEdHlwZRgBIAEoCRIQCghiYXNlX3VybBgCIAEoCRIkCgV0b29scxgDIAMoCzIVLmNvdW50ZXJzcGVsbC52MS5Ub29sIkEKC1N5bnRoZXNpemVyEg0KBW1vZGVsGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEg4KBnByb21wdBgDIAEoCSKzAQoFQWdlbnQSDQoFbW9kZWwYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSEwoLaW5zdHJ1Y3Rpb24YAyABKAkSEgoKc3ViX2FnZW50cxgEIAMoCRIqCgh0b29sc2V0cxgFIAMoCzIYLmNvdW50ZXJzcGVsbC52MS5Ub29sc2V0EjEKC3N5bnRoZXNpemVyGAYgASgLMhwuY291bnRlcnNwZWxsLnYxLlN5bnRoZXNpemVyIpoCCglCbHVlcHJpbnQSDwoHdmVyc2lvbhgBIAEoCRI2CgZtb2RlbHMYAiADKAsyJi5jb3VudGVyc3BlbGwudjEuQmx1ZXByaW50Lk1vZGVsc0VudHJ5EjYKBmFnZW50cxgDIAMoCzImLmNvdW50ZXJzcGVsbC52MS5CbHVlcHJpbnQuQWdlbnRzRW50cnkaRQoLTW9kZWxzRW50cnkSCwoDa2V5GAEgASgJEiUKBXZhbHVlGAIgASgLMhYuY291bnRlcnNwZWxsLnYxLk1vZGVsOgI4ARpFCgtBZ2VudHNFbnRyeRILCgNrZXkYASABKAkSJQoFdmFsdWUYAiABKAsyFi5jb3VudGVyc3BlbGwudjEuQWdlbnQ6AjgBMgkKB1NlcnZpY2VCRFpCZ2l0aHViLmNvbS9yZXZyb3N0L2NvdW50ZXJzcGVsbC9nZW4vY291bnRlcnNwZWxsL3YxO2NvdW50ZXJzcGVsbHYxYgZwcm90bzM", [file_google_protobuf_any, file_google_protobuf_struct, file_google_protobuf_timestamp]);

/**
 * ---------- MODELS ----------
 *
 * @generated from message counterspell.v1.Model
 */
export type Model = Message<"counterspell.v1.Model"> & {
  /**
   * @generated from field: string provider = 1;
   */
  provider: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;
};

/**
 * Describes the message counterspell.v1.Model.
 * Use `create(ModelSchema)` to create a new message.
 */
export const ModelSchema: GenMessage<Model> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 0);

/**
 * ---------- TOOL PARAMS ----------
 *
 * @generated from message counterspell.v1.ToolParam
 */
export type ToolParam = Message<"counterspell.v1.ToolParam"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: bool required = 3;
   */
  required: boolean;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * for array types
   *
   * @generated from field: repeated string items = 5;
   */
  items: string[];
};

/**
 * Describes the message counterspell.v1.ToolParam.
 * Use `create(ToolParamSchema)` to create a new message.
 */
export const ToolParamSchema: GenMessage<ToolParam> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 1);

/**
 * @generated from message counterspell.v1.Tool
 */
export type Tool = Message<"counterspell.v1.Tool"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: map<string, counterspell.v1.ToolParam> params = 3;
   */
  params: { [key: string]: ToolParam };
};

/**
 * Describes the message counterspell.v1.Tool.
 * Use `create(ToolSchema)` to create a new message.
 */
export const ToolSchema: GenMessage<Tool> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 2);

/**
 * @generated from message counterspell.v1.Toolset
 */
export type Toolset = Message<"counterspell.v1.Toolset"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string base_url = 2;
   */
  baseUrl: string;

  /**
   * @generated from field: repeated counterspell.v1.Tool tools = 3;
   */
  tools: Tool[];
};

/**
 * Describes the message counterspell.v1.Toolset.
 * Use `create(ToolsetSchema)` to create a new message.
 */
export const ToolsetSchema: GenMessage<Toolset> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 3);

/**
 * ---------- SYNTHESIZER ----------
 *
 * @generated from message counterspell.v1.Synthesizer
 */
export type Synthesizer = Message<"counterspell.v1.Synthesizer"> & {
  /**
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string prompt = 3;
   */
  prompt: string;
};

/**
 * Describes the message counterspell.v1.Synthesizer.
 * Use `create(SynthesizerSchema)` to create a new message.
 */
export const SynthesizerSchema: GenMessage<Synthesizer> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 4);

/**
 * ---------- AGENT ----------
 *
 * @generated from message counterspell.v1.Agent
 */
export type Agent = Message<"counterspell.v1.Agent"> & {
  /**
   * reference to model key
   *
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string instruction = 3;
   */
  instruction: string;

  /**
   * references other agents
   *
   * @generated from field: repeated string sub_agents = 4;
   */
  subAgents: string[];

  /**
   * @generated from field: repeated counterspell.v1.Toolset toolsets = 5;
   */
  toolsets: Toolset[];

  /**
   * @generated from field: counterspell.v1.Synthesizer synthesizer = 6;
   */
  synthesizer?: Synthesizer;
};

/**
 * Describes the message counterspell.v1.Agent.
 * Use `create(AgentSchema)` to create a new message.
 */
export const AgentSchema: GenMessage<Agent> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 5);

/**
 * ---------- ROOT CONFIG ----------
 *
 * @generated from message counterspell.v1.Blueprint
 */
export type Blueprint = Message<"counterspell.v1.Blueprint"> & {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * planning_model, thinking_model, etc.
   *
   * @generated from field: map<string, counterspell.v1.Model> models = 2;
   */
  models: { [key: string]: Model };

  /**
   * planner, stock_pricer, etc.
   *
   * @generated from field: map<string, counterspell.v1.Agent> agents = 3;
   */
  agents: { [key: string]: Agent };
};

/**
 * Describes the message counterspell.v1.Blueprint.
 * Use `create(BlueprintSchema)` to create a new message.
 */
export const BlueprintSchema: GenMessage<Blueprint> = /*@__PURE__*/
  messageDesc(file_proto_counterspell_v1_counterspell, 6);

/**
 * rpc CreateBlueprint(Blueprint) returns (Blueprint);
 * rpc GetBlueprint(Blueprint) returns (Blueprint);
 * rpc ListBlueprints(Blueprint) returns (Blueprint);
 *
 * @generated from service counterspell.v1.Service
 */
export const Service: GenService<{
}> = /*@__PURE__*/
  serviceDesc(file_proto_counterspell_v1_counterspell, 0);

